@model TheDrinkHub_DWEB.Models.ApplicationUser

@{
    ViewData["Title"] = "Criar Utilizador";
}

<h1>Criar Utilizador</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Nome"></label>
        <input asp-for="Nome" class="form-control" />
        <span asp-validation-for="Nome" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Email"></label>
        <input asp-for="Email" class="form-control" />
        <span asp-validation-for="Email" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="DataNascimento"></label>
        <input asp-for="DataNascimento" type="date" class="form-control" />
        <span asp-validation-for="DataNascimento" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Nif"></label>
        <input asp-for="Nif" class="form-control" />
        <span asp-validation-for="Nif" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="Morada"></label>
        <input asp-for="Morada" class="form-control" />
        <span asp-validation-for="Morada" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label for="Password">Password</label>
        <input type="password" name="Password" class="form-control" />
        @* Não podes usar asp-validation-for porque Password não está no modelo *@
        @if (ViewData.ModelState["Password"]?.Errors.Count > 0)
        {
            <span class="text-danger">@ViewData.ModelState["Password"].Errors[0].ErrorMessage</span>
        }
    </div>
    <button type="submit" class="btn btn-primary">Criar</button> |
    <a asp-action="Index" class="btn btn-secondary">Voltar</a>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
